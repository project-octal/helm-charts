# Authentication settings
# Valid values for enabled_auth_method are `none`, `password`, and `openId`.
auth:
  enabledMethod: password
#  password: ""
#  openId: 
#    issuerBaseUrl: ""
#    clientId: ""
#    baseUrl: ""
#    secret: ""
#    groupClaim: ""
#    userGroup: ""

replicaCount: 1

image:
  repository: quay.io/ansible/awx-operator
  tag: '0.9.0'
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
hostnameOverride: ""
namespace: "awx"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

##
## Init containers parameters:
## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
##
volumePermissions:
  enabled: true
  securityContext:
    runAsUser: 0

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  enabled: true
  fsGroup: 1000
  runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 1000Mi

nodeSelector: {}

tolerations: []

affinity: {}


serviceAccount:
  create: true
  name:
